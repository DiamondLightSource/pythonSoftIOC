# This file was automatically generated on Thu 29 Apr 2021 14:11:13 BST.
#
# *** Please do not edit this file: edit the source file instead. ***
#

# Used by Channel Access Security to determine access to this IOC.
record(mbbo, "TS-DI-TEST-01:ACCESS")
{
  field(DESC, "TS-DI-TEST-01 Acc Mode")
  field(PINI, "YES")
  field(ZRST, "Running")
  field(ZRSV, "NO_ALARM")
  field(ONST, "Maintenance")
  field(ONSV, "MINOR")
  field(TWST, "Test")
  field(TWSV, "MINOR")
  field(THST, "OFFLINE")
  field(THSV, "MAJOR")
  info(autosaveFields, "VAL")
}
record(stringin, "TS-DI-TEST-01:STARTTOD")
{
    field(DESC, "Time and date of startup")
    field(DTYP, "Soft Timestamp")
    field(PINI, "YES")
    field(INP, "@%m/%d/%Y %H:%M:%S")
}
record(stringin, "TS-DI-TEST-01:TOD")
{
    field(DESC, "Current time and date")
    field(DTYP, "Soft Timestamp")
    field(SCAN, "1 second")
    field(INP, "@%m/%d/%Y %H:%M:%S")
}
record(calcout, "TS-DI-TEST-01:HEARTBEAT")
{
    field(DESC, "1 Hz counter since startup")
    field(CALC, "(A<2147483647)?A+1:1")
    field(SCAN, "1 second")
    field(INPA, "TS-DI-TEST-01:HEARTBEAT")
}
# if autosave is working, START_CNT creates a running count of
# number of times the IOC was started.
record(calcout, "TS-DI-TEST-01:START_CNT")
{
    field(DESC, "Increments at startup")
    field(CALC, "A+1")
    field(PINI, "YES")
    field(INPA, "TS-DI-TEST-01:START_CNT")
    info(autosaveFields_pass0, "VAL")
}
#
# Using an existing internal set of subroutines, this
# PV updates the Access Security mechanism dynamically.
# The .acf file is re-read.
#
record( sub, "TS-DI-TEST-01:READACF")
{
    field( DESC, "TS-DI-TEST-01 ACF Update")
    field( INAM, "asSubInit")
    field( SNAM, "asSubProcess")
    field( BRSV, "INVALID")
}
record(sub, "TS-DI-TEST-01:SYSRESET")
{
    alias("TS-DI-TEST-01:SysReset")
    field(DESC, "IOC Restart" )
    field(SNAM, "rebootProc")
    field(BRSV,"INVALID")
    field(L,"1")
}

record(ai, "TS-DI-TEST-01:CA_CLNT_CNT") {
  field(DESC, "Number of CA Clients")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@ca_clients")
  field(HOPR, "200")
  field(HIHI, "175")
  field(HIGH, "100")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

record(ai, "TS-DI-TEST-01:CA_CONN_CNT") {
  field(DESC, "Number of CA Connections")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@ca_connections")
  field(HOPR, "5000")
  field(HIHI, "4500")
  field(HIGH, "4000")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

record(ai, "TS-DI-TEST-01:RECORD_CNT") {
  field(DESC, "Number of Records")
  field(PINI, "YES")
  field(DTYP, "IOC stats")
  field(INP, "@records")
}

record(ai, "TS-DI-TEST-01:FD_MAX") {
  field(DESC, "Max File Descriptors")
  field(PINI, "YES")
  field(DTYP, "IOC stats")
  field(INP, "@maxfd")
}

record(ai, "TS-DI-TEST-01:FD_CNT") {
  field(DESC, "Allocated File Descriptors")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(FLNK, "TS-DI-TEST-01:FD_FREE  PP MS")
  field(INP, "@fd")
}

record(calc, "TS-DI-TEST-01:FD_FREE") {
  field(DESC, "Available FDs")
  field(CALC, "B>0?B-A:C")
  field(INPA, "TS-DI-TEST-01:FD_CNT  NPP MS")
  field(INPB, "TS-DI-TEST-01:FD_MAX  NPP MS")
  field(INPC, "1000")
  field(HOPR, "150")
  field(LOLO, "5")
  field(LOW, "20")
  field(LLSV, "MAJOR")
  field(LSV, "MINOR")
  info(autosaveFields_pass0, "HOPR LOPR LOW LOLO LSV LLSV")
}

record(ai, "TS-DI-TEST-01:SYS_CPU_LOAD") {
  field(DESC, "System CPU Load")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@sys_cpuload")
  field(EGU, "%")
  field(PREC, "1")
  field(HOPR, "100")
  field(HIHI, "80")
  field(HIGH, "70")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

record(ai, "TS-DI-TEST-01:IOC_CPU_LOAD") {
  alias("TS-DI-TEST-01:LOAD")
  field(DESC, "IOC CPU Load")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@ioc_cpuload")
  field(EGU, "%")
  field(PREC, "1")
  field(HOPR, "100")
  field(HIHI, "80")
  field(HIGH, "70")
  field(HHSV, "MAJOR")
  field(HSV, "MINOR")
  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

record(ai, "TS-DI-TEST-01:CPU_CNT") {
  field(DESC, "Number of CPUs")
  field(DTYP, "IOC stats")
  field(INP, "@no_of_cpus")
  field(PINI, "YES")
}

record(ai, "TS-DI-TEST-01:SUSP_TASK_CNT") {
  field(DESC, "Number Suspended Tasks")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@suspended_tasks")
  field(HIHI, "1")
  field(HHSV, "MAJOR")
  info(autosaveFields_pass0, "HOPR LOPR HIHI HIGH LOW LOLO HHSV HSV LSV LLSV")
}

record(ai, "TS-DI-TEST-01:MEM_USED") {
  field(DESC, "Allocated Memory")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@allocated_bytes")
  field(EGU, "byte")
}

record(ai, "TS-DI-TEST-01:MEM_FREE") {
  field(DESC, "Free Memory")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@free_bytes")
  field(EGU, "byte")
  field(LLSV, "MAJOR")
  field(LSV, "MINOR")
  info(autosaveFields_pass0, "HOPR LOPR LOW LOLO LSV LLSV")
}

record(ai, "TS-DI-TEST-01:MEM_MAX") {
  field(DESC, "Maximum Memory")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP, "@total_bytes")
  field(EGU, "byte")
}

record(ao, "TS-DI-TEST-01:CA_UPD_TIME") {
  field(DESC, "CA Check Update Period")
  field(DTYP, "IOC stats")
  field(OUT, "@ca_scan_rate")
  field(EGU, "sec")
  field(DRVH, "60")
  field(DRVL, "1")
  field(HOPR, "60")
  field(VAL, "15")
  field(PINI, "YES")
}

record(ao, "TS-DI-TEST-01:FD_UPD_TIME") {
  field(DESC, "FD Check Update Period")
  field(DTYP, "IOC stats")
  field(OUT, "@fd_scan_rate")
  field(EGU, "sec")
  field(DRVH, "60")
  field(DRVL, "1")
  field(HOPR, "60")
  field(VAL, "20")
  field(PINI, "YES")
}

record(ao, "TS-DI-TEST-01:LOAD_UPD_TIME") {
  field(DESC, "CPU Check Update Period")
  field(DTYP, "IOC stats")
  field(OUT, "@cpu_scan_rate")
  field(EGU, "sec")
  field(DRVH, "60")
  field(DRVL, "1")
  field(HOPR, "60")
  field(VAL, "10")
  field(PINI, "YES")
}

record(ao, "TS-DI-TEST-01:MEM_UPD_TIME") {
  field(DESC, "Memory Check Update Period")
  field(DTYP, "IOC stats")
  field(OUT, "@memory_scan_rate")
  field(EGU, "sec")
  field(DRVH, "60")
  field(DRVL, "1")
  field(HOPR, "60")
  field(VAL, "10")
  field(PINI, "YES")
}

record(stringin, "TS-DI-TEST-01:ST_SCRIPT1") {
  field(DESC, "Startup Script Part1")
  field(DTYP, "IOC stats")
  field(INP, "@startup_script_1")
  field(PINI, "YES")
}

record(stringin, "TS-DI-TEST-01:ST_SCRIPT2") {
  field(DESC, "Startup Script Part2")
  field(DTYP, "IOC stats")
  field(INP, "@startup_script_2")
  field(PINI, "YES")
}

record(waveform, "TS-DI-TEST-01:ST_SCRIPT") {
  field(DESC, "Startup Script")
  field(DTYP, "IOC stats")
  field(INP, "@startup_script")
  field(NELM, "120")
  field(FTVL, "CHAR")
  field(PINI, "YES")
}

record(stringin, "TS-DI-TEST-01:KERNEL_VERS") {
  field(DESC, "Kernel Version")
  field(DTYP, "IOC stats")
  field(INP, "@kernel_ver")
  field(PINI, "YES")
}

record(stringin, "TS-DI-TEST-01:EPICS_VERS") {
  field(DESC, "EPICS Version")
  field(DTYP, "IOC stats")
  field(INP, "@epics_ver")
  field(PINI, "YES")
}

record(waveform, "TS-DI-TEST-01:EPICS_VERSION") {
  field(DESC, "EPICS Version")
  field(DTYP, "IOC stats")
  field(INP, "@epics_ver")
  field(NELM, "120")
  field(FTVL, "CHAR")
  field(PINI, "YES")
}

record(stringin, "TS-DI-TEST-01:HOSTNAME") {
  field(DESC, "Host Name")
  field(DTYP, "IOC stats")
  field(INP, "@hostname")
  field(PINI, "YES")
}

record(stringin, "TS-DI-TEST-01:APP_DIR1") {
  field(DESC, "Application Directory Part 1")
  field(DTYP, "IOC stats")
  field(INP, "@pwd1")
  field(PINI, "YES")
}

record(stringin, "TS-DI-TEST-01:APP_DIR2") {
  field(DESC, "Application Directory Part 2")
  field(DTYP, "IOC stats")
  field(INP, "@pwd2")
  field(PINI, "YES")
}

record(waveform, "TS-DI-TEST-01:APP_DIR") {
  field(DESC, "Application Directory")
  field(DTYP, "IOC stats")
  field(INP, "@pwd")
  field(NELM, "160")
  field(FTVL, "CHAR")
  field(PINI, "YES")
}

record(stringin, "TS-DI-TEST-01:UPTIME") {
  field(DESC, "Elapsed Time since Start")
  field(SCAN, "1 second")
  field(DTYP, "IOC stats")
  field(INP, "@up_time")
  field(PINI, "YES")
}

record(stringin, "TS-DI-TEST-01:ENGINEER") {
  field(DESC, "Engineer")
  field(DTYP, "IOC stats")
  field(INP, "@engineer")
  field(PINI, "YES")
}

record(stringin, "TS-DI-TEST-01:LOCATION") {
  field(DESC, "Location")
  field(DTYP, "IOC stats")
  field(INP, "@location")
  field(PINI, "YES")
}

record(ai, "TS-DI-TEST-01:PROCESS_ID") {
  field(DESC, "Process ID")
  field(PINI, "YES")
  field(DTYP, "IOC stats")
  field(INP, "@proc_id")
}

record(ai, "TS-DI-TEST-01:PARENT_ID") {
  field(DESC, "Parent Process ID")
  field(PINI, "YES")
  field(DTYP, "IOC stats")
  field(INP, "@parent_proc_id")
}

record(ai, "TS-DI-TEST-01:SCANONCE_Q_SIZE") {
  field(DESC, "max # entries in IOC scanOnce queue")
  field(DTYP, "IOC stats")
  field(INP,  "@scanOnceQueueSize")
  field(PINI, "YES")
}
record(ai, "TS-DI-TEST-01:CB_Q_SIZE") {
  field(DESC, "max # entries in IOC callback queues")
  field(DTYP, "IOC stats")
  field(INP,  "@cbQueueSize")
  field(PINI, "YES")
}

record(ai, "TS-DI-TEST-01:SCANONCE_Q_HIGH") {
  field(DESC, "max # of elmts in IOC's scanOnce queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@scanOnceQueueHiWtrMrk")
  field(PINI, "YES")
  field(FLNK, "TS-DI-TEST-01:SCANONCE_Q_HIGHPER")
}

record(calc, "TS-DI-TEST-01:SCANONCE_Q_HIGHPER") {
  field(DESC, "Max. usage of IOC's scanOnce queue")
  field(INPA, "TS-DI-TEST-01:SCANONCE_Q_HIGH NPP MS")
  field(INPB, "TS-DI-TEST-01:SCANONCE_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "TS-DI-TEST-01:SCANONCE_Q_USED") {
  field(DESC, "# of entries in IOC's scanOnce queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@scanOnceQueueUsed")
  field(PINI, "YES")
  field(FLNK, "TS-DI-TEST-01:SCANONCE_Q_USEDPER")
}

record(calc, "TS-DI-TEST-01:SCANONCE_Q_USEDPER") {
  field(DESC, "Percentage of IOC's scanOnce queue used")
  field(INPA, "TS-DI-TEST-01:SCANONCE_Q_USED NPP MS")
  field(INPB, "TS-DI-TEST-01:SCANONCE_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "TS-DI-TEST-01:SCANONCE_Q_OVERRUNS") {
  field(DESC, "# of overruns of IOC's scanOnce queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@scanOnceQueueOverruns")
  field(PINI, "YES")
}

record(ai, "TS-DI-TEST-01:CBLOW_Q_HIGH") {
  field(DESC, "max # of elmts in IOC's cbLow queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbLowQueueHiWtrMrk")
  field(PINI, "YES")
  field(FLNK, "TS-DI-TEST-01:CBLOW_Q_HIGHPER")
}

record(calc, "TS-DI-TEST-01:CBLOW_Q_HIGHPER") {
  field(DESC, "Max. usage of IOC's cbLow queue")
  field(INPA, "TS-DI-TEST-01:CBLOW_Q_HIGH NPP MS")
  field(INPB, "TS-DI-TEST-01:CB_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "TS-DI-TEST-01:CBLOW_Q_USED") {
  field(DESC, "# of entries in IOC's cbLow queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbLowQueueUsed")
  field(PINI, "YES")
  field(FLNK, "TS-DI-TEST-01:CBLOW_Q_USEDPER")
}

record(calc, "TS-DI-TEST-01:CBLOW_Q_USEDPER") {
  field(DESC, "Percentage of IOC's cbLow queue used")
  field(INPA, "TS-DI-TEST-01:CBLOW_Q_USED NPP MS")
  field(INPB, "TS-DI-TEST-01:CB_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "TS-DI-TEST-01:CBLOW_Q_OVERRUNS") {
  field(DESC, "# of overruns of IOC's cbLow queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbLowQueueOverruns")
  field(PINI, "YES")
}

record(ai, "TS-DI-TEST-01:CBMEDIUM_Q_HIGH") {
  field(DESC, "max # of elmts in IOC's cbMedium queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbMediumQueueHiWtrMrk")
  field(PINI, "YES")
  field(FLNK, "TS-DI-TEST-01:CBMEDIUM_Q_HIGHPER")
}

record(calc, "TS-DI-TEST-01:CBMEDIUM_Q_HIGHPER") {
  field(DESC, "Max. usage of IOC's cbMedium queue")
  field(INPA, "TS-DI-TEST-01:CBMEDIUM_Q_HIGH NPP MS")
  field(INPB, "TS-DI-TEST-01:CB_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "TS-DI-TEST-01:CBMEDIUM_Q_USED") {
  field(DESC, "# of entries in IOC's cbMedium queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbMediumQueueUsed")
  field(PINI, "YES")
  field(FLNK, "TS-DI-TEST-01:CBMEDIUM_Q_USEDPER")
}

record(calc, "TS-DI-TEST-01:CBMEDIUM_Q_USEDPER") {
  field(DESC, "Percentage of IOC's cbMedium queue used")
  field(INPA, "TS-DI-TEST-01:CBMEDIUM_Q_USED NPP MS")
  field(INPB, "TS-DI-TEST-01:CB_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "TS-DI-TEST-01:CBMEDIUM_Q_OVERRUNS") {
  field(DESC, "# of overruns of IOC's cbMedium queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbMediumQueueOverruns")
  field(PINI, "YES")
}

record(ai, "TS-DI-TEST-01:CBHIGH_Q_HIGH") {
  field(DESC, "max # of elmts in IOC's cbHigh queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbHighQueueHiWtrMrk")
  field(PINI, "YES")
  field(FLNK, "TS-DI-TEST-01:CBHIGH_Q_HIGHPER")
}

record(calc, "TS-DI-TEST-01:CBHIGH_Q_HIGHPER") {
  field(DESC, "Max. usage of IOC's cbHigh queue")
  field(INPA, "TS-DI-TEST-01:CBHIGH_Q_HIGH NPP MS")
  field(INPB, "TS-DI-TEST-01:CB_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "TS-DI-TEST-01:CBHIGH_Q_USED") {
  field(DESC, "# of entries in IOC's cbHigh queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbHighQueueUsed")
  field(PINI, "YES")
  field(FLNK, "TS-DI-TEST-01:CBHIGH_Q_USEDPER")
}

record(calc, "TS-DI-TEST-01:CBHIGH_Q_USEDPER") {
  field(DESC, "Percentage of IOC's cbHigh queue used")
  field(INPA, "TS-DI-TEST-01:CBHIGH_Q_USED NPP MS")
  field(INPB, "TS-DI-TEST-01:CB_Q_SIZE NPP MS")
  field(CALC, "100*A/B")
  field(LOPR, "0")
  field(HOPR, "100")
  field(EGU,  "%")
}

record(ai, "TS-DI-TEST-01:CBHIGH_Q_OVERRUNS") {
  field(DESC, "# of overruns of IOC's cbHigh queue")
  field(SCAN, "I/O Intr")
  field(DTYP, "IOC stats")
  field(INP,  "@cbHighQueueOverruns")
  field(PINI, "YES")
}

record(ai, "TS-DI-TEST-01:AI")
{
    field(DTYP, "Python")
    field(INP,  "@TS-DI-TEST-01:AI")
    field(PINI, "YES")
    field(SCAN, "I/O Intr")
}

record(ao, "TS-DI-TEST-01:AO")
{
    field(DTYP, "Python")
    field(OUT,  "@TS-DI-TEST-01:AO")
}

record(bi, "TS-DI-TEST-01:BOOLIN")
{
    field(DTYP, "Python")
    field(INP,  "@TS-DI-TEST-01:BOOLIN")
    field(ONAM, "False")
    field(PINI, "YES")
    field(SCAN, "I/O Intr")
    field(ZNAM, "True")
}

record(bo, "TS-DI-TEST-01:BOOLOUT")
{
    field(DTYP, "Python")
    field(OMSL, "supervisory")
    field(ONAM, "One")
    field(OUT,  "@TS-DI-TEST-01:BOOLOUT")
    field(ZNAM, "Zero")
}

record(longin, "TS-DI-TEST-01:LONGIN")
{
    field(DTYP, "Python")
    field(INP,  "@TS-DI-TEST-01:LONGIN")
    field(MDEL, "-1")
    field(PINI, "YES")
    field(SCAN, "I/O Intr")
}

record(longout, "TS-DI-TEST-01:LONGOUT")
{
    field(DTYP, "Python")
    field(OMSL, "supervisory")
    field(OUT,  "@TS-DI-TEST-01:LONGOUT")
}

record(waveform, "TS-DI-TEST-01:LONGSTRING")
{
    field(DTYP, "Python")
    field(FTVL, "UCHAR")
    field(INP,  "@TS-DI-TEST-01:LONGSTRING")
    field(NELM, "256")
    field(SCAN, "I/O Intr")
}

record(mbbi, "TS-DI-TEST-01:MBBI")
{
    field(DTYP, "Python")
    field(INP,  "@TS-DI-TEST-01:MBBI")
    field(ONST, "Two")
    field(ONVL, "1")
    field(PINI, "YES")
    field(SCAN, "I/O Intr")
    field(TWST, "Three")
    field(TWSV, "MINOR")
    field(TWVL, "2")
    field(ZRST, "One")
    field(ZRVL, "0")
}

record(mbbo, "TS-DI-TEST-01:MBBO")
{
    field(DTYP, "Python")
    field(OMSL, "supervisory")
    field(ONST, "Zwei")
    field(ONVL, "1")
    field(OUT,  "@TS-DI-TEST-01:MBBO")
    field(TWST, "Drei")
    field(TWVL, "2")
    field(ZRST, "Ein")
    field(ZRVL, "0")
}

record(waveform, "TS-DI-TEST-01:SIN")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@TS-DI-TEST-01:SIN")
    field(NELM, "1024")
    field(SCAN, "I/O Intr")
}

record(longout, "TS-DI-TEST-01:SINN")
{
    field(DRVH, "1024")
    field(DRVL, "0")
    field(DTYP, "Python")
    field(OMSL, "supervisory")
    field(OUT,  "@TS-DI-TEST-01:SINN")
}

record(ao, "TS-DI-TEST-01:SINP")
{
    field(DTYP, "Python")
    field(OUT,  "@TS-DI-TEST-01:SINP")
}

record(stringin, "TS-DI-TEST-01:STRINGIN")
{
    field(DTYP, "Python")
    field(INP,  "@TS-DI-TEST-01:STRINGIN")
    field(PINI, "YES")
    field(SCAN, "I/O Intr")
}

record(stringout, "TS-DI-TEST-01:STRINGOUT")
{
    field(DTYP, "Python")
    field(OUT,  "@TS-DI-TEST-01:STRINGOUT")
}

record(waveform, "TS-DI-TEST-01:WAVEFORM")
{
    field(DTYP, "Python")
    field(FTVL, "DOUBLE")
    field(INP,  "@TS-DI-TEST-01:WAVEFORM")
    field(NELM, "32")
    field(PINI, "YES")
    field(SCAN, "I/O Intr")
}

record(waveform, "TS-DI-TEST-01:WAVEFORM2")
{
    field(DTYP, "Python")
    field(FTVL, "FLOAT")
    field(INP,  "@TS-DI-TEST-01:WAVEFORM2")
    field(NELM, "10")
    field(SCAN, "I/O Intr")
}

record(waveform, "TS-DI-TEST-01:WAVEFORM_OUT")
{
    field(DTYP, "PythonWfOut")
    field(FTVL, "DOUBLE")
    field(INP,  "@TS-DI-TEST-01:WAVEFORM_OUT")
    field(NELM, "32")
}
